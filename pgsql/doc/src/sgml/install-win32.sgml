<!-- $PostgreSQL: pgsql/doc/src/sgml/install-win32.sgml,v 1.29.2.1 2007/02/02 16:10:10 neilc Exp $ -->

<chapter id="install-win32">
 <title>Client-Only Installation on <productname>Windows</productname></title>

 <indexterm>
  <primary>installation</primary>
  <secondary>on Windows</secondary>
 </indexterm>

 <para>
  Although a complete <productname>PostgreSQL</productname> installation
  for <productname>Windows</> can only be built using
  <productname>MinGW</productname> or
  <productname>Cygwin</productname>, the C client library
  (<application>libpq</application>) and the interactive terminal
  (<application>psql</application>) can be compiled using other Windows
  tool sets. Makefiles are included in the source distribution for
  <productname>Microsoft Visual C++</productname> and
  <productname>Borland C++</productname>. It should be possible to
  compile the libraries manually for other configurations.
 </para>

 <tip>
  <para>
   Using <productname>MinGW</productname> or
   <productname>Cygwin</productname> is preferred.  If using one of
   those tool sets, see <xref linkend="installation">.
  </para>
 </tip>

 <para>
  To build everything that you can on <productname>Windows</productname>
  using <productname>Microsoft Visual C++</productname>, change into the
  <filename>src</filename> directory and type the command
<screen>
<userinput>nmake /f win32.mak</userinput>
</screen>
  This assumes that you have <productname>Visual C++</productname> in
  your path.
 </para>

 <para>
  To build everything using <productname>Borland
  C++</productname>, change into the <filename>src</filename> directory
  and type the command
<screen>
<userinput>make -N -DCFG=Release /f bcc32.mak</userinput>
</screen>
 </para>

 <para>
  The following files will be built:

  <variablelist>
   <varlistentry>
    <term><filename>interfaces\libpq\Release\libpq.dll</filename></term>
    <listitem>
     <para>
      The dynamically linkable frontend library
     </para>
    </listitem>
   </varlistentry>
  
   <varlistentry>
    <term><filename>interfaces\libpq\Release\libpqdll.lib</filename></term>
    <listitem>
     <para>
      Import library to link your programs to <filename>libpq.dll</filename>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><filename>interfaces\libpq\Release\libpq.lib</filename></term>
    <listitem>
     <para>
      Static version of the frontend library
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><filename>bin\pg_config\Release\pg_config.exe</filename></term>
    <term><filename>bin\psql\Release\psql.exe</filename></term>
    <term><filename>bin\pg_dump\Release\pg_dump.exe</filename></term>
    <term><filename>bin\pg_dump\Release\pg_dumpall.exe</filename></term>
    <term><filename>bin\pg_dump\Release\pg_restore.exe</filename></term>
    <term><filename>bin\scripts\Release\clusterdb.exe</filename></term>
    <term><filename>bin\scripts\Release\createdb.exe</filename></term>
    <term><filename>bin\scripts\Release\createuser.exe</filename></term>
    <term><filename>bin\scripts\Release\createlang.exe</filename></term>
    <term><filename>bin\scripts\Release\dropdb.exe</filename></term>
    <term><filename>bin\scripts\Release\dropuser.exe</filename></term>
    <term><filename>bin\scripts\Release\droplang.exe</filename></term>
    <term><filename>bin\scripts\Release\vacuumdb.exe</filename></term>
    <term><filename>bin\scripts\Release\reindexdb.exe</filename></term>
    <listitem>
     <para>
     The <productname>PostgreSQL</productname> client applications and utilities.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </para>

 <para>
  Normally you do not need to install any of the client files. You should
  place the <filename>libpq.dll</filename> file in the same directory
  as your applications .EXE-file. Only if this is for some reason not
  possible should you install it in the <filename>WINNT\SYSTEM32</filename>
  directory (or in <filename>WINDOWS\SYSTEM</filename> on a Windows 95/98/ME
  system).  If this file is installed using a setup program, it should
  be installed with version checking using the
  <symbol>VERSIONINFO</symbol> resource included in the file, to
  ensure that a newer version of the library is not overwritten.
 </para>

 <para>
  If you plan to do development using <application>libpq</application>
  on this machine, you will have to add the
  <filename>src\include</filename> and
  <filename>src\interfaces\libpq</filename> subdirectories of the source
  tree to the include path in your compiler's settings.
 </para>

 <para>
  To use the library, you must add the
  <filename>libpqdll.lib</filename> file to your project.  (In Visual
  C++, just right-click on the project and choose to add it.)
 </para>

 <para>
  Free development tools from <productname>Microsoft</productname>
  can be downloaded from
  <ulink url="http://msdn.microsoft.com/visualc/vctoolkit2003/"></>.
  You will also need <filename>MSVCRT.lib</> from the platform SDK from
  <ulink url="http://www.microsoft.com/msdownload/platformsdk/sdkupdate/"></>.
  You can also download the <application>.NET</> framework from
  <ulink url="http://msdn.microsoft.com/netframework/downloads/updates/default.aspx"></>.
  Once installed, the toolkit binaries must be in your path, and you might
  need to add a <literal>/lib:&lt;libpath&gt;</> to point to <filename>MSVCRT.lib</>.
  Free <productname>Borland C++</productname> compiler tools can be downloaded from
  <ulink url="http://www.borland.com/products/downloads/download_cbuilder.html#"></>,
  and require similar setup.
 </para>
</chapter>
